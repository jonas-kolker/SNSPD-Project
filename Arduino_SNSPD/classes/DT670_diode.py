# -*- coding: utf-8 -*-
"""
Created on Tue Mar  2 11:06:27 2021

@author: lucenthoven
"""
import numpy as np
import matplotlib.pyplot as plt

class DT670_diode(object):
    offset = 0
    # There seems to be ~0.75K difference at RT
    dec_arr = np.array([[ 1.400000e+00,  1.644290e+00, -1.248933e+01],
                        [ 1.500000e+00,  1.642990e+00, -1.362982e+01],
                       [ 1.600000e+00,  1.641570e+00, -1.479334e+01],
                       [ 1.700000e+00,  1.640030e+00, -1.597987e+01],
                       [ 1.800000e+00,  1.638370e+00, -1.714728e+01],
                       [ 1.900000e+00,  1.636600e+00, -1.825338e+01],
                       [ 2.000000e+00,  1.634720e+00, -1.929817e+01],
                       [ 2.100000e+00,  1.632740e+00, -2.026550e+01],
                       [ 2.200000e+00,  1.630670e+00, -2.113918e+01],
                       [ 2.300000e+00,  1.628520e+00, -2.191922e+01],
                       [ 2.400000e+00,  1.626290e+00, -2.260560e+01],
                       [ 2.500000e+00,  1.624000e+00, -2.318245e+01],
                       [ 2.600000e+00,  1.621660e+00, -2.363387e+01],
                       [ 2.700000e+00,  1.619280e+00, -2.395986e+01],
                       [ 2.800000e+00,  1.616870e+00, -2.416041e+01],
                       [ 2.900000e+00,  1.614450e+00, -2.435561e+01],
                       [ 3.000000e+00,  1.612000e+00, -2.466552e+01],
                       [ 3.100000e+00,  1.609510e+00, -2.509015e+01],
                       [ 3.200000e+00,  1.606970e+00, -2.562951e+01],
                       [ 3.300000e+00,  1.604380e+00, -2.621934e+01],
                       [ 3.400000e+00,  1.601730e+00, -2.679543e+01],
                       [ 3.500000e+00,  1.599020e+00, -2.735777e+01],
                       [ 3.600000e+00,  1.596260e+00, -2.790637e+01],
                       [ 3.700000e+00,  1.593440e+00, -2.844121e+01],
                       [ 3.800000e+00,  1.590570e+00, -2.898949e+01],
                       [ 3.900000e+00,  1.587640e+00, -2.957840e+01],
                       [ 4.000000e+00,  1.584650e+00, -3.020793e+01],
                       [ 4.200000e+00,  1.578480e+00, -3.158885e+01],
                       [ 4.400000e+00,  1.572020e+00, -3.291424e+01],
                       [ 4.600000e+00,  1.565330e+00, -3.396611e+01],
                       [ 4.800000e+00,  1.558450e+00, -3.474443e+01],
                       [ 5.000000e+00,  1.551450e+00, -3.524923e+01],
                       [ 5.200000e+00,  1.544360e+00, -3.560206e+01],
                       [ 5.400000e+00,  1.537210e+00, -3.592451e+01],
                       [ 5.600000e+00,  1.530000e+00, -3.621659e+01],
                       [ 5.800000e+00,  1.522730e+00, -3.647828e+01],
                       [ 6.000000e+00,  1.515410e+00, -3.670959e+01],
                       [ 6.500000e+00,  1.496980e+00, -3.685600e+01],
                       [ 7.000000e+00,  1.478680e+00, -3.621463e+01],
                       [ 7.500000e+00,  1.460860e+00, -3.499872e+01],
                       [ 8.000000e+00,  1.443740e+00, -3.342148e+01],
                       [ 8.500000e+00,  1.427470e+00, -3.167395e+01],
                       [ 9.000000e+00,  1.412070e+00, -2.994713e+01],
                       [ 9.500000e+00,  1.397510e+00, -2.831155e+01],
                       [ 1.000000e+01,  1.383730e+00, -2.683768e+01],
                       [ 1.050000e+01,  1.370650e+00, -2.550830e+01],
                       [ 1.100000e+01,  1.358200e+00, -2.430614e+01],
                       [ 1.150000e+01,  1.346320e+00, -2.319767e+01],
                       [ 1.200000e+01,  1.334990e+00, -2.214937e+01],
                       [ 1.250000e+01,  1.324160e+00, -2.116644e+01],
                       [ 1.300000e+01,  1.313810e+00, -2.025408e+01],
                       [ 1.350000e+01,  1.303900e+00, -1.940933e+01],
                       [ 1.400000e+01,  1.294390e+00, -1.862920e+01],
                       [ 1.450000e+01,  1.285260e+00, -1.792460e+01],
                       [ 1.500000e+01,  1.276450e+00, -1.730641e+01],
                       [ 1.550000e+01,  1.267940e+00, -1.677093e+01],
                       [ 1.600000e+01,  1.259670e+00, -1.631446e+01],
                       [ 1.650000e+01,  1.251610e+00, -1.593612e+01],
                       [ 1.700000e+01,  1.243720e+00, -1.563506e+01],
                       [ 1.750000e+01,  1.235960e+00, -1.540793e+01],
                       [ 1.800000e+01,  1.228300e+00, -1.525141e+01],
                       [ 1.850000e+01,  1.220700e+00, -1.517677e+01],
                       [ 1.900000e+01,  1.213110e+00, -1.519531e+01],
                       [ 1.950000e+01,  1.205480e+00, -1.533556e+01],
                       [ 2.000000e+01,  1.197748e+00, -1.562607e+01],
                       [ 2.100000e+01,  1.181548e+00, -1.698253e+01],
                       [ 2.200000e+01,  1.162797e+00, -2.110864e+01],
                       [ 2.300000e+01,  1.140817e+00, -2.076668e+01],
                       [ 2.400000e+01,  1.125923e+00, -9.417931e+00],
                       [ 2.500000e+01,  1.119448e+00, -4.596471e+00],
                       [ 2.600000e+01,  1.115658e+00, -3.185347e+00],
                       [ 2.700000e+01,  1.112810e+00, -2.578509e+00],
                       [ 2.800000e+01,  1.110421e+00, -2.246492e+00],
                       [ 2.900000e+01,  1.108261e+00, -2.080624e+00],
                       [ 3.000000e+01,  1.106244e+00, -1.962611e+00],
                       [ 3.100000e+01,  1.104324e+00, -1.880101e+00],
                       [ 3.200000e+01,  1.102476e+00, -1.819186e+00],
                       [ 3.300000e+01,  1.100681e+00, -1.772220e+00],
                       [ 3.400000e+01,  1.098930e+00, -1.731560e+00],
                       [ 3.500000e+01,  1.097216e+00, -1.697206e+00],
                       [ 3.600000e+01,  1.095534e+00, -1.668325e+00],
                       [ 3.700000e+01,  1.093878e+00, -1.644087e+00],
                       [ 3.800000e+01,  1.092244e+00, -1.624491e+00],
                       [ 3.900000e+01,  1.090627e+00, -1.609191e+00],
                       [ 4.000000e+01,  1.089024e+00, -1.597841e+00],
                       [ 4.200000e+01,  1.085842e+00, -1.586995e+00],
                       [ 4.400000e+01,  1.082669e+00, -1.586581e+00],
                       [ 4.600000e+01,  1.079492e+00, -1.591231e+00],
                       [ 4.800000e+01,  1.076303e+00, -1.598356e+00],
                       [ 5.000000e+01,  1.073099e+00, -1.605367e+00],
                       [ 5.200000e+01,  1.069881e+00, -1.612265e+00],
                       [ 5.400000e+01,  1.066650e+00, -1.619381e+00],
                       [ 5.600000e+01,  1.063403e+00, -1.627045e+00],
                       [ 5.800000e+01,  1.060141e+00, -1.635257e+00],
                       [ 6.000000e+01,  1.056862e+00, -1.643959e+00],
                       [ 6.500000e+01,  1.048584e+00, -1.667578e+00],
                       [ 7.000000e+01,  1.040183e+00, -1.693169e+00],
                       [ 7.500000e+01,  1.031651e+00, -1.719827e+00],
                       [ 7.735000e+01,  1.027594e+00, -1.732521e+00],
                       [ 8.000000e+01,  1.022984e+00, -1.746905e+00],
                       [ 8.500000e+01,  1.014181e+00, -1.774083e+00],
                       [ 9.000000e+01,  1.005244e+00, -1.800806e+00],
                       [ 9.500000e+01,  9.961740e-01, -1.827230e+00],
                       [ 1.000000e+02,  9.869740e-01, -1.852606e+00],
                       [ 1.050000e+02,  9.776500e-01, -1.876646e+00],
                       [ 1.100000e+02,  9.682090e-01, -1.899452e+00],
                       [ 1.150000e+02,  9.586570e-01, -1.921105e+00],
                       [ 1.200000e+02,  9.490000e-01, -1.941685e+00],
                       [ 1.250000e+02,  9.392420e-01, -1.961193e+00],
                       [ 1.300000e+02,  9.293900e-01, -1.979745e+00],
                       [ 1.350000e+02,  9.194460e-01, -1.997460e+00],
                       [ 1.400000e+02,  9.094160e-01, -2.014338e+00],
                       [ 1.450000e+02,  8.993040e-01, -2.030355e+00],
                       [ 1.500000e+02,  8.891140e-01, -2.045487e+00],
                       [ 1.550000e+02,  8.788510e-01, -2.059734e+00],
                       [ 1.600000e+02,  8.685180e-01, -2.073219e+00],
                       [ 1.650000e+02,  8.581200e-01, -2.086062e+00],
                       [ 1.700000e+02,  8.476590e-01, -2.098264e+00],
                       [ 1.750000e+02,  8.371380e-01, -2.109921e+00],
                       [ 1.800000e+02,  8.265600e-01, -2.121130e+00],
                       [ 1.850000e+02,  8.159280e-01, -2.131890e+00],
                       [ 1.900000e+02,  8.052420e-01, -2.142257e+00],
                       [ 1.950000e+02,  7.945050e-01, -2.152285e+00],
                       [ 2.000000e+02,  7.837200e-01, -2.161975e+00],
                       [ 2.050000e+02,  7.728860e-01, -2.171350e+00],
                       [ 2.100000e+02,  7.620070e-01, -2.180435e+00],
                       [ 2.150000e+02,  7.510820e-01, -2.189231e+00],
                       [ 2.200000e+02,  7.401150e-01, -2.197770e+00],
                       [ 2.250000e+02,  7.291050e-01, -2.206088e+00],
                       [ 2.300000e+02,  7.180540e-01, -2.214182e+00],
                       [ 2.350000e+02,  7.069640e-01, -2.222062e+00],
                       [ 2.400000e+02,  6.958340e-01, -2.229735e+00],
                       [ 2.450000e+02,  6.846670e-01, -2.237201e+00],
                       [ 2.500000e+02,  6.734620e-01, -2.244439e+00],
                       [ 2.550000e+02,  6.622230e-01, -2.251431e+00],
                       [ 2.600000e+02,  6.509490e-01, -2.258175e+00],
                       [ 2.650000e+02,  6.396410e-01, -2.264723e+00],
                       [ 2.700000e+02,  6.283020e-01, -2.271124e+00],
                       [ 2.731500e+02,  6.211410e-01, -2.275081e+00],
                       [ 2.750000e+02,  6.169300e-01, -2.277378e+00],
                       [ 2.800000e+02,  6.055280e-01, -2.283414e+00],
                       [ 2.850000e+02,  5.940970e-01, -2.289158e+00],
                       [ 2.900000e+02,  5.826370e-01, -2.294612e+00],
                       [ 2.950000e+02,  5.711510e-01, -2.299834e+00],
                       [ 3.000000e+02,  5.596390e-01, -2.304880e+00],
                       [ 3.050000e+02,  5.481020e-01, -2.309753e+00],
                       [ 3.100000e+02,  5.365420e-01, -2.314259e+00],
                       [ 3.150000e+02,  5.249610e-01, -2.318207e+00],
                       [ 3.200000e+02,  5.133610e-01, -2.321597e+00],
                       [ 3.250000e+02,  5.017440e-01, -2.325317e+00],
                       [ 3.300000e+02,  4.901060e-01, -2.330256e+00],
                       [ 3.350000e+02,  4.784420e-01, -2.334916e+00],
                       [ 3.400000e+02,  4.667600e-01, -2.337799e+00],
                       [ 3.450000e+02,  4.550670e-01, -2.338907e+00],
                       [ 3.500000e+02,  4.433710e-01, -2.339537e+00],
                       [ 3.550000e+02,  4.316700e-01, -2.340987e+00],
                       [ 3.600000e+02,  4.199600e-01, -2.343257e+00],
                       [ 3.650000e+02,  4.082370e-01, -2.345794e+00],
                       [ 3.700000e+02,  3.965030e-01, -2.348043e+00],
                       [ 3.750000e+02,  3.847570e-01, -2.350005e+00],
                       [ 3.800000e+02,  3.730020e-01, -2.352110e+00],
                       [ 3.850000e+02,  3.612350e-01, -2.354790e+00],
                       [ 3.900000e+02,  3.494530e-01, -2.358044e+00],
                       [ 3.950000e+02,  3.376540e-01, -2.361483e+00],
                       [ 4.000000e+02,  3.258390e-01, -2.364714e+00],
                       [ 4.050000e+02,  3.140080e-01, -2.367739e+00],
                       [ 4.100000e+02,  3.021610e-01, -2.370871e+00],
                       [ 4.150000e+02,  2.902980e-01, -2.374425e+00],
                       [ 4.200000e+02,  2.784160e-01, -2.378401e+00],
                       [ 4.250000e+02,  2.665140e-01, -2.382448e+00],
                       [ 4.300000e+02,  2.545920e-01, -2.386213e+00],
                       [ 4.350000e+02,  2.426530e-01, -2.389696e+00],
                       [ 4.400000e+02,  2.306970e-01, -2.392448e+00],
                       [ 4.450000e+02,  2.187300e-01, -2.394021e+00],
                       [ 4.500000e+02,  2.067580e-01, -2.394415e+00],
                       [ 4.550000e+02,  1.947890e-01, -2.393021e+00],
                       [ 4.600000e+02,  1.828320e-01, -2.389230e+00],
                       [ 4.650000e+02,  1.709010e-01, -2.383043e+00],
                       [ 4.700000e+02,  1.590100e-01, -2.372133e+00],
                       [ 4.750000e+02,  1.471910e-01, -2.354177e+00],
                       [ 4.800000e+02,  1.354800e-01, -2.329174e+00],
                       [ 4.850000e+02,  1.239150e-01, -2.294651e+00],
                       [ 4.900000e+02,  1.125530e-01, -2.248133e+00],
                       [ 4.950000e+02,  1.014540e-01, -2.189620e+00],
                       [ 5.000000e+02,  9.068100e-02, -2.116515e+00]])
    

    def linear_decode2(value):
        #find nearest voltage values
        value = value-DT670_diode.offset
        ind1 = (np.abs(DT670_diode.dec_arr[:,1]-value)).argmin()
        print(value, DT670_diode.dec_arr[ind1, 1])
        dV = value - DT670_diode.dec_arr[ind1, 1]
        dK = dV * DT670_diode.dec_arr[ind1, 2]
        print(dV, dK)
        return DT670_diode.dec_arr[ind1,0]+dK

    def linear_decode(value):
        #find nearest voltage values
        value = value+DT670_diode.offset
        diff = (np.abs(DT670_diode.dec_arr[:,1]-value))
        ind1 = np.argmin(diff)
        if diff[min(ind1+1,len(diff)-1)]>diff[ind1-1]:
            ind2 = ind1-1
        else:
            ind2 = ind1+1
        dVind = DT670_diode.dec_arr[ind1, 1] - DT670_diode.dec_arr[ind2, 1]
        dKind = DT670_diode.dec_arr[ind1, 0] - DT670_diode.dec_arr[ind2, 0]
        sens = dKind/dVind
        K = DT670_diode.dec_arr[ind1, 0] + sens * (value-DT670_diode.dec_arr[ind1, 1])
        
        
        # print(value, DT670_diode.dec_arr[ind1, 1])
        # dV = value - DT670_diode.dec_arr[ind1, 1]
        # dK = dV * DT670_diode.dec_arr[ind1, 2]
        # print(dV, dK)
        return K

if __name__=="__main__":
    decode = DT670_diode()
    
    array = np.linspace(0.4, 1.6, num=500)
    arrayres1 = np.zeros(500)
    arrayres2 = np.zeros(500)
    for ind, val in enumerate(array):
        arrayres1[ind] = DT670_diode.linear_decode(val)
        arrayres2[ind] = DT670_diode.linear_decode2(val)
    
    # plt.plot(array, arrayres1)
    plt.plot(array, arrayres2)